https://projecteuler.net/problem=40

I tried this by counting digits, and then by bruteforcing with a really long StringBuilder, but ran into issues with both.
I instead opted to do this mathematically on paper.
First, I wrote down which values of d(x) the different digits covers

1: d(1) -> d(9)
2: d(10) -> d(189)
3: d(190) -> d(2889)
4: d(2890) -> d(38889)
5: d(38890) -> d(488889)
6: d(488890) -> d(5888889)

Then for each d(10^N), I determined which digit it would be under, and then divided the amount of digits it had left by the current digit quantity to find what number it was on.
d(1) = 1, by inspection
d(10) = 1, by inspection
d(100) is (100 - 10) / 2 = 45 numbers in. 2 digits starts at 10, so d(100) is the first digit of 10 + 45, or 5.
d(1000) is (1000 - 190) / 3 = 270. d(1000) is the first digit of 100 + 270, 3.
d(10000) is (10000 - 2890) / 4 = 1777 with remainder 2. d(10000) is the third digit of 1000 + 1777, 7.
d(100000) is (100000 - 38890) / 5 = 12222. d(100000) is the first digit of 10000 + 12222, 2.
d(1000000) is (1000000 - 488890) / 6 = 85185. d(1000000) is the first digit of 100000 + 85185, 1.

The product of all of these is 1 * 1 * 5 * 3 * 7 * 2 * 1 = 210

Runtime: O(Math)
Answer: 210