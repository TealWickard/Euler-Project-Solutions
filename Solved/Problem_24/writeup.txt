https://projecteuler.net/problem=24

I find this problem much easier to do by hand, than with a computer.

If we think about the first few numbers, they will all start with 123456... and end with
789
798
879
897
978
987
in that order.
Notice that there are 3! permutations of 3 digits.
It follows, that for the last N digits, there are N! permutations.
The highest N! under 1000000 is when N = 9.
This means we will be permuting 9 digits.
Each full set of permutations is 9! digits.
The highest integer K such that K * 9! < 10000000 is K = 2.
What this means is that we skip 2 full permutations of 9 digits, or 2 of the 1st digit, and use the 3rd number, which is 2.
We then subtract that many permutations from 1000000, leaving us with 1000000 - 2 * 9! permutations to go through.
The process repeats recursively until we reach 1000000 - k1 * 9! - k2 * 8! - ... - k9 * 1! - k10 * 0! = 1.
The values of k happen to be {2, 6, 6, 2, 5, 1, 2, 1, 1, 0}.
This isn't our number yet, because what these coefficients represent is the index that is left after each digit.
For example, as we determine the first digit is 2, the remaining digits are {0, 1, 3, 4, 5, 6, 7, 8, 9}.
Our next coefficient is 6, so the next digit in our number is the 6th number in the above set, 7.
This process repeats until all the digits are used, giving us the answer.
I have written code that does this process automatically, and commented it since it is a bit tough to follow.

Runtime: O(N)
Answer: 2783915460